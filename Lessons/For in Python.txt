**3.0**
For in Python




$PCC0M(Change)
%&#Copy the code below to print a range of numbers (1-14)
for x in range(1,15):
    print x
%& 
$TOP for x in range(1,15):print x $#1 2 3 4 5 6 7 8 9 10 11 12 13 14


%&#TODO: Change the range to go 2 through 16 (includes 16)
for x in range(1,15):
    print x
%& 
$TOP for x in range(2,17):print x $#2 3 4 5 6 7 8 9 10 11 12 13 14 15 16



%&#Sometimes we want to add up numbers in a series.
#TODO: Change the code so that it adds up 1 through 200 (do not include 200)
sum = 0
for x in range(1, 20):
    sum = sum + x
print sum
%& 
$TOP sum = 0 for x in range(1, 200):   sum = sum + x print sum $#19900


%&#We haven't focused on this, but when we make a List, we can fill it up:
lis = [6, 7, 4, 19]
 
#And then add even more:
lis.append(27.0)
 
#Let's get the sum of our List lis
sum = 0
for x in lis:
    sum = sum + x
print sum
%& 
$TOP lis = [6, 7, 4, 19] lis.append(27.0) sum = 0 for x in lis:   sum = sum + x print sum $#63.0


%& 
lis = [3, 5, 2, 6]
lis2= [2, 5, 6, 8]
 
#Python allows us to traverse (travel) through two Lists at once
#Let's declare a sum variable
doubleSum = 0
 
#The below zip() function ties our two Lists together so
#	they can be traversed together
for (x, y) in zip(lis,lis2):
    doubleSum = doubleSum + x + y
print doubleSum
%& 
$TOPlis = [3, 5, 2, 6]lis2= [2, 5, 6, 8]doubleSum = 0for (x, y) in zip(lis,lis2):    doubleSum = doubleSum + x + yprint doubleSum $#37


%&#TODO: Change your code so that lis2 no longer has an 8.
#DO NOT REMOVE ANYTHING ELSE
#After doing this, our sum will actually be 23, because:
#	8 from lis2 was removed
#	6 from lis is ignored (lis is longer than lis2)
lis = [3, 5, 2, 6]
lis2= [2, 5, 6, 8]
 
#Python allows us to traverse (travel) through two Lists at once
#Let's declare a sum variable
doubleSum = 0
#The below zip() function ties our two Lists together so
#	they can be traversed together
for (x, y) in zip(lis,lis2):
    doubleSum = doubleSum + x + y
print doubleSum
%& 
$TOPlis = [3, 5, 2, 6]lis2= [2, 5, 6]doubleSum = 0for (x, y) in zip(lis,lis2):    doubleSum = doubleSum + x + yprint doubleSum $#**saveprev**


%&#Python can even allow for traversing three Lists!
#But it will only go as far as the shortest List in the group
 
lis = [3, 5, 2, 6]
lis2= [2, 5, 6, 8]
lis3= [5]
 
tripleSum = 0
for (x, y, z) in zip(lis,lis2,lis3):
    tripleSum = tripleSum + x + y + z
print tripleSum
%& 
$TOPlis = [3, 5, 2, 6]lis2= [2, 5, 6, 8]lis3= [5]tripleSum = 0for (x, y, z) in zip(lis,lis2,lis3):    tripleSum = tripleSum + x + y + zprint tripleSum $#10